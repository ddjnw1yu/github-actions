# This is a basic workflow to help you get started with Actions

name: Check Step Outcome

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  check:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    outputs:
      step-outcome: ${{ steps.step.outcome }}

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Get mock step outcome
        id: step
        run: |
          echo "this is step 1"
          # exit 1
        continue-on-error: true
      - name: Check step
        run: |
          echo "C_STEP=${{ steps.step.outcome }}"
            
  print:
    runs-on: ubuntu-latest

    needs: check

    steps:
      - name: Get previous workflow status
        uses: Mercymeilya/last-workflow-status@v0.3.3
        id: workflow
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Result
        run: |
          echo "C_STEP=${{ needs.check.step-outcome }}" >> $GITHUB_ENV
          echo "P_WORKFLOW=${{ steps.workflow.outputs.last_status }}" >> $GITHUB_ENV

      - name: Get testing status
        id: status
        run: |
          if [[ $C_STEP == 'success' && $P_WORKFLOW == 'success' ]]; then
            echo "value=keepsuccess" >> $GITHUB_OUTPUT
          elif [[ $C_STEP == 'success' && $P_WORKFLOW == 'failure' ]]; then
            echo "value=backtonormal" >> $GITHUB_OUTPUT
          elif [[ $C_STEP == 'failure' && $P_WORKFLOW == 'success' ]]; then
            echo "value=failure" >> $GITHUB_OUTPUT
          elif [[ $C_STEP == 'failure' && $P_WORKFLOW == 'failure' ]]; then
            echo "value=keepfailure" >> $GITHUB_OUTPUT
          else
            echo "Unexpected condition. Investigation is required."
          fi

      - name: Send notification to Slack
        run: |
          echo "Testing status=${{ steps.status.value }}"
          echo "Sending notification to Slack..."
